openapi: 3.0.0
info:
  title: Clio Grow API Documentation
  contact:
    name: Clio Grow API Support
    email: api@clio.com
  description: "# Developer Support and Feedback\n* Clio takes the availability and stability of our API seriously; please report any **degradations** or **breakages** to Clio Grow's API Support team at [api@clio.com](mailto:api@clio.com).\n* For business and partnership inquiries, contact our API Partnerships team at [api.partnerships@clio.com](mailto:api.partnerships@clio.com).\n* For best practices and tips from the Clio development community, join the conversation in the [Clio Developer Slack Channel](https://join.slack.com/t/clio-public/shared_invite/zt-1bd5nfbiv-WloZR3ZjepoUTv28SI1ezw).\n\n# Getting Started\n> **Note:** The API is available in three distinct data regions: Australia (au.grow.clio.com), EU (eu.grow.clio.com) and US (grow.clio.com).\n>\n> Likewise, the developer portal is available at region-specific links for the [Australia](https://au.developers.clio.com), [EU](https://eu.developers.clio.com), and [US](https://developers.clio.com) regions.\n>\n> This document assumes the US region is being used (grow.clio.com). If you're building in one of the other regions, you should adapt the links and examples as necessary."
  version: early access
  x-logo:
    url: https://www.clio.com/wp-content/uploads/2015/05/Container-5-Logo.png
servers:
  - url: https://grow.clio.com/api/v2
    description: US region Production Server
  - url: https://eu.grow.clio.com/api/v2
    description: Europe region Production Server
  - url: https://au.grow.clio.com/api/v2
    description: Australia region Production Server
paths:
  /contacts:
    get:
      tags:
        - Contacts
      summary: Return the data for all Contacts
      operationId: Contact#index
      description: >-
        Outlines the parameters, optional and required, used when requesting the data for all Contacts
      parameters:
        - name: created_since
          description: >-
            Filter Contact records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ids[]
          description: >-
            Filter Contact records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: query
          description: >-
            Wildcard search for name, email address, or phone number matching a given string.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter Contact records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Ok
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Contact_List'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Return the data for a single Contact
      operationId: Contact#show
      parameters:
        - name: id
          in: path
          description: The unique identifier for the Contact.
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Contact'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Not Found
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
  /contacts/{contact_id}/notes:
    get:
      tags:
        - Contacts
      summary: Return the notes for a single Contact
      description:  >-
        Outlines the parameters, optional and required, used when requesting the notes for a single Contact
      operationId: ContactNote#index
      parameters:
        - name: created_since
          description: >-
            Filter ContactNote records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contact_id
          in: path
          description: Filters Note records by Contact.
          required: true
          schema:
            type: integer
            format: int64
        - name: ids[]
          description: >-
            Filter ContactNote records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter ContactNote records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Note_List'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
    post:
      tags:
        - Contacts
      summary: Create a new Note for a specific Contact
      operationId: ContactNote#create
      parameters:
        - name: contact_id
          in: path
          description: The unique identifier of the Contact to create the Note for.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Request Body for Contact Note
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    body:
                      type: string
                      description: The body of the *Note*
                    subject:
                      type: string
                      description: The subject of the *Note*
                  required:
                    - body
                    - subject
      responses:
          '201':
            description: Created
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Note'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '422':
            description: Unprocessable Entity
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
  /custom_actions:
    get:
      tags:
        - Custom Actions
      summary: Return the data for all CustomActions
      operationId: CustomAction#index
      description:  >-
        Outlines the parameters, optional and required, used when requesting the date for all CustomActions
      parameters:
        - name: created_since
          description: >-
            Filter CustomAction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ids[]
          description: >-
            Filter CustomAction records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter CustomAction records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/CustomAction_List'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
    post:
      tags:
        - Custom Actions
      summary: Create a new CustomAction
      operationId: CustomAction#create
      requestBody:
        description: Request Body for CustomAction
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    label:
                      type: string
                      description: The text of the *CustomAction* link that will appear to the customer.
                    target_url:
                      type: string
                      description: The URL to which the user will be sent when they click the *CustomAction*.
                    ui_reference:
                      type: string
                      description: The location in which the *CustomAction* will appear.
                      enum:
                        - matters/show
                  required:
                    - label
                    - target_url
                    - ui_reference
      responses:
          '201':
            description: Created
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/CustomAction'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '422':
            description: Unprocessable Entity
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
  /custom_actions/{id}:
    delete:
      tags:
        - Custom Actions
      summary: Delete a single CustomAction
      operationId: CustomAction#destroy
      description: >-
        Outlines the parameters, optional and required, used when deleting the
        record for a single CustomAction
      parameters:
        - name: id
          in: path
          description: The unique identifier for the CustomAction.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /inbox_leads:
    get:
      tags:
        - Inbox Leads
      summary: Return the data for all InboxLeads
      operationId: InboxLead#index
      description: >-
        Outlines the parameters, optional and required, used when requesting the data for all InboxLeads
      parameters:
        - name: created_since
          description: >-
            Filter InboxLead records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ids[]
          description: >-
            Filter InboxLead records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: query
          description: >-
            Wildcard search for name, email address, or phone number matching a given string.
          in: query
          required: false
          schema:
            type: string
        - name: state
          description: >-
            Filter InboxLead records to those having the specified state.
          in: query
          required: true
          schema:
            type: string
            enum:
              - ignored
              - untriaged
        - name: updated_since
          description: >-
            Filter InboxLead records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Ok
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InboxLead_List'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Inbox Leads
      summary: Create a new InboxLead
      operationId: InboxLead#create
      requestBody:
        description: Request Body for InboxLead
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    email:
                      type: string
                      description: The email address of the *InboxLead*.
                    first_name:
                      type: string
                      description: The first name of the *InboxLead*.
                    from_message:
                      type: string
                      description: Custom message explaining the needs of the *InboxLead*.
                    from_source:
                      type: string
                      description: >-
                        The name of the service submitting the *InboxLead*; this will be used to identify the source
                        and distinguish it from any other integrations. For example, this can be the name of the 
                        integration or website which submitted the lead to the inbox.
                    last_name:
                      type: string
                      description: The last name of the *InboxLead*.
                    phone_number:
                      type: string
                      description: The phone number of the *InboxLead*.
                    referring_url:
                      type: string
                      description: >-
                        The URL of the webpage where the *InboxLead* was submitted. Static text can be provided (e.g. 
                        “Call handled by virtual receptionist”) if it is not submitted via a web form.
                  required:
                    - first_name
                    - last_name
                    - from_message
                    - from_source
                    - referring_url
      responses:
          '201':
            description: Created
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/InboxLead_Create'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '422':
            description: Unprocessable Entity
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'   
  /inbox_leads/{id}:
    get:
      tags:
        - Inbox Leads
      summary: Return the data for a single InboxLead
      operationId: InboxLead#show
      parameters:
        - name: id
          in: path
          description: The unique identifier for the InboxLead.
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/InboxLead'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Not Found
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'  
  /matters:
    get:
      tags:
        - Matters
      summary: Return the data for all Matters
      operationId: Matter#index
      description: >-
        Outlines the parameters, optional and required, used when requesting the data for all Matters
      parameters:
        - name: created_since
          description: >-
            Filter Matter records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ids[]
          description: >-
            Filter Matter records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter Matter records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Ok
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Matter_List'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /matters/{id}:
    get:
      tags:
        - Matters
      summary: Return the data for a single Matter
      operationId: Matter#show
      parameters:
        - name: id
          in: path
          description: The unique identifier for the Matter.
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Matter'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Not Found
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'  
  /matters/{matter_id}/notes:
    get:
      tags:
        - Matters
      summary: Return the notes for a single Matter
      description:  >-
        Outlines the parameters, optional and required, used when requesting the notes for a single Matter
      operationId: MatterNote#index
      parameters:
        - name: created_since
          description: >-
            Filter MatterNote records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: matter_id
          in: path
          description: Filters Note records by Matter.
          required: true
          schema:
            type: integer
            format: int64
        - name: ids[]
          description: >-
            Filter MatterNote records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter MatterNote records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
          '200':
            description: Ok
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Note_List'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
    post:
      tags:
        - Matters
      summary: Create a new Note for a specific Matter
      operationId: MatterNote#create
      parameters:
        - name: matter_id
          in: path
          description: The unique identifier of the Matter to create the Note for.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Request Body for MatterNote
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    body:
                      type: string
                      description: The body of the *Note*
                    subject:
                      type: string
                      description: The subject of the *Note*
                  required:
                    - body
                    - subject
      responses:
          '201':
            description: Created
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Note'
          '400':
            description: Bad Request
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Forbidden
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '422':
            description: Unprocessable Entity
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            description: Too Many Requests
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
        - Users
      summary: Return the data for all Users
      operationId: User#index
      description: >-
        Outlines the parameters, optional and required, used when requesting the data for all Users
      parameters:
        - name: created_since
          description: >-
            Filter User records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ids[]
          description: >-
            Filter User records to those having the specified unique identifiers (maximum 50).
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          description: A token specifying which page to return.
          in: query
          required: false
          schema:
            type: string
        - name: updated_since
          description: >-
            Filter User records to those having the `updated_since` field after a
            specific time. (Expects an ISO-8601 timestamp).
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Ok
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/User_List'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /users/who_am_i:
    get:
      tags:
        - Users
      summary: Return the data for the current User
      operationId: User#who_am_i
      responses:
        '200':
          description: Ok
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Account*
        firm_name:
          type: string
          description: The firm name of the *Account*
    Contact:
      type: object
      properties:
        clio_id:
          type: integer
          format: int64
          description: Unique Clio identifier for the *Contact*
        created_at:
          type: string
          format: date-time
          description: The time the *Contact* was created (as a ISO-8601 timestamp)
        emails:
          type: array
          items:
            type: string         
          description: The email addresses of the *Contact* 
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Contact*
        matters:
          type: array
          items:
            $ref: '#/components/schemas/MatterId'
          description: The matters associated with the *Contact*
        name:
          type: string
          description: The name of the *Contact*
        phone_numbers:
          type: array
          items:
            type: string 
          description: The phone numbers of the *Contact*
        status:
          type: string
          enum:
            - Unassigned
            - Lead
            - Client
            - Did Not Hire
          description: The status of the *Contact*
        type:
          type: string
          enum:
            - Company
            - Person
          description: The type of the *Contact*
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *Contact* was last updated (as a ISO-8601
            timestamp)
    Contact_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: Contact List Response
          items:
            $ref: '#/components/schemas/Contact'
    Contact_Primary:
      type: object
      properties:
        full_name:
          type: string
          description: The full name of the *Contact*
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Contact*
        phone_number:
          type: string
          description: The phone number of the *Contact*
        primary_email:
          type: string
          description: The primary email of the *Contact*
    CustomAction:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: The time the *CustomAction* was created (as a ISO-8601 timestamp)
        id:
          type: integer
          format: int64
          description: Unique identifier for the *CustomAction*
        label:
          type: string
          description: Text label to be displayed on the custom link
        target_url:
          type: string
          description: Target URL which will be opened in a new tab when the user clicks the custom link.
        ui_reference:
          type: string
          description: UI reference location within Clio where the link will be displayed
          enum:
            - matters/show
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *CustomAction* was last updated (as a ISO-8601
            timestamp)
    CustomAction_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: CustomAction Response
          items:
            $ref: '#/components/schemas/CustomAction'
    ErrorDetail:
      type: object
      required:
        - message
        - status
      properties:
        message:
          type: string
          description: Detailed message about the error
        status:
          type: string
          description: Unique name for this error
    Error:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/ErrorDetail'
    InboxLead:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: The time the *InboxLead* was created (as a ISO-8601 timestamp)
        email:
          type: string
          description: The email of the *InboxLead*
        first_name:
          type: string
          description: The first name of the *InboxLead*
        id:
          type: integer
          format: int64
          description: Unique identifier for the *InboxLead*
        last_name:
          type: string
          description: The last name of the *InboxLead*
        phone_number:
          type: string
          description: The phone number of the *InboxLead*
        state:
          type: string
          enum:
            - ignored
            - untriaged
          description: The state of the *InboxLead*
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *InboxLead* was last updated (as a ISO-8601
            timestamp)
    InboxLead_Create:
      allOf:
        - $ref: '#/components/schemas/InboxLead'
        - type: object
          properties:
            from_message:
              type: string
              description: Custom message explaining the needs of the *InboxLead*
            from_source:
              type: string
              description: The name of the service submitting the *InboxLead*
            referring_url:
              type: string
              description: The URL of the webpage where the *InboxLead* was submitted
    InboxLead_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: InboxLead List Response
          items:
            $ref: '#/components/schemas/InboxLead'   
    Matter:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: The time the *Matter* was created (as a ISO-8601 timestamp)
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Matter*
        description:
          type: string
          description: The description of the *Matter*
        clio_id:
          type: integer
          format: int64
          description: Unique Clio identifier for the *Matter*
        location:
          type: string
          description: The location of the *Matter*
        primary_contact:
          $ref: '#/components/schemas/Contact_Primary'
          description: The primary contact of the *Matter*
        status:
          type: string
          enum:
            - Newly Added
            - Consult Scheduled
            - Pending Engagement
          description: The user-defined custom status of the *Matter*
        status_category:
          type: string
          enum:
            - intake
            - hired
            - declined
          description: The status category that defines the *Matter* current state / pipeline stage
        type:
          type: string
          description: The type of the *Matter*
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *Matter* was last updated (as a ISO-8601
            timestamp)
    MatterId:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Matter*
    Matter_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: Matter List Response
          items:
            $ref: '#/components/schemas/Matter'
    Note:
      type: object
      properties:
        body:
          type: string
          description: The body of the *Note*
        created_at:
          type: string
          format: date-time
          description: The time the *Note* was created (as a ISO-8601 timestamp)
        id:
          type: integer
          format: int64
          description: Unique identifier for the *Note*
        subject:
          type: string
          description: The subject of the *Note*
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *Note* was last updated (as a ISO-8601
            timestamp)
    Note_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: Note List Response
          items:
            $ref: '#/components/schemas/Note'
    User:
      type: object
      properties:
        account: 
          $ref: '#/components/schemas/Account'
        created_at:
          type: string
          format: date-time
          description: The time the *User* was created (as a ISO-8601 timestamp)
        email:
          type: string
          description: The email of the *User*
        first_name:
          type: string
          description: The first name of the *User*
        id:
          type: integer
          format: int64
          description: Unique identifier for the *User*
        last_name:
          type: string
          description: The last name of the *User*
        updated_at:
          type: string
          format: date-time
          description: >-
            The time the *User* was last updated (as a ISO-8601
            timestamp)
    User_List:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          description: User List Response
          items:
            $ref: '#/components/schemas/User'
tags:
  - name: Contacts
  - name: Custom Actions
    description: >-
      Custom Actions are a mechanism to add a link to certain dropdowns in the Clio Grow user interface.
      When this link is clicked by a Grow user, a new tab opens in their browser and they are sent to the URL 
      provided during that Custom Action's creation. Clio will attach contextual parameters to the URL to 
      enable the integration that created the custom action to call the API afterward.


      ## Security


      ### Confirming a User's Action


      Because custom actions require an unauthorized GET request made from a user's browser, it's important to 
      validate that a user has actually performed an action within Clio.


      When a request is sent to the URL specified on the custom action, Clio includes a unique `custom_action_nonce`
      parameter. If you send the `custom_action_nonce` in your next request to the API as a query parameter, 
      Clio will use it to validate that the user who clicked the custom action matches your oauth token request. 
      If the nonce does not match, a 403 Forbidden error will be returned. 


      The nonce value is a single-use code and has an expiry of 60 seconds.
  - name: Inbox Leads
  - name: Matters
  - name: Users
x-tagGroups:
  - name: Contacts
    tags:
      - Contacts
  - name: Custom Actions
    tags:
        - Custom Actions
  - name: Inbox Leads
    tags:
        - Inbox Leads
  - name: Matters
    tags:
        - Matters
  - name: Users
    tags:
      - Users